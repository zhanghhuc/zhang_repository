<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.kakasys.dao.mapper.coin.AccountCompanyMapper" >
  <resultMap id="BaseResultMap" type="com.kakasys.entity.coin.AccountCompany" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="is_disable" property="isDisable" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="VARCHAR" />
    <result column="com_id" property="comId" jdbcType="VARCHAR" />
    <result column="dept_id" property="deptId" jdbcType="VARCHAR" />
    <result column="emp_id" property="empId" jdbcType="VARCHAR" />
    <result column="admin_id" property="adminId" jdbcType="VARCHAR" />
    <result column="budge_id" property="budgeId" jdbcType="VARCHAR" />
    <result column="account_name" property="accountName" jdbcType="VARCHAR" />
    <result column="account_lever" property="accountLever" jdbcType="VARCHAR" />
    <result column="account_code" property="accountCode" jdbcType="VARCHAR" />
    <result column="account_amount" property="accountAmount" jdbcType="VARCHAR" />
    <result column="applier_id" property="applierId" jdbcType="VARCHAR" />
    <result column="account_id" property="accountId" jdbcType="VARCHAR" />
    <result column="remain_account_id" property="remainAccountId" jdbcType="VARCHAR" />
    <result column="can_in" property="canIn" jdbcType="VARCHAR" />
    <result column="can_out" property="canOut" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, is_disable, create_time, com_id, dept_id, emp_id, admin_id, budge_id, account_name, 
    account_lever, account_code, account_amount, applier_id, account_id, remain_account_id, 
    can_in, can_out
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.kakasys.entity.coin.AccountCompanyExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from account_company
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from account_company
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from account_company
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.kakasys.entity.coin.AccountCompanyExample" >
    delete from account_company
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.kakasys.entity.coin.AccountCompany" >
    insert into account_company (id, is_disable, create_time, 
      com_id, dept_id, emp_id, 
      admin_id, budge_id, account_name, 
      account_lever, account_code, account_amount, 
      applier_id, account_id, remain_account_id, 
      can_in, can_out)
    values (#{id,jdbcType=VARCHAR}, #{isDisable,jdbcType=VARCHAR}, #{createTime,jdbcType=VARCHAR}, 
      #{comId,jdbcType=VARCHAR}, #{deptId,jdbcType=VARCHAR}, #{empId,jdbcType=VARCHAR}, 
      #{adminId,jdbcType=VARCHAR}, #{budgeId,jdbcType=VARCHAR}, #{accountName,jdbcType=VARCHAR}, 
      #{accountLever,jdbcType=VARCHAR}, #{accountCode,jdbcType=VARCHAR}, #{accountAmount,jdbcType=VARCHAR}, 
      #{applierId,jdbcType=VARCHAR}, #{accountId,jdbcType=VARCHAR}, #{remainAccountId,jdbcType=VARCHAR}, 
      #{canIn,jdbcType=VARCHAR}, #{canOut,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.kakasys.entity.coin.AccountCompany" >
    insert into account_company
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="isDisable != null" >
        is_disable,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="comId != null" >
        com_id,
      </if>
      <if test="deptId != null" >
        dept_id,
      </if>
      <if test="empId != null" >
        emp_id,
      </if>
      <if test="adminId != null" >
        admin_id,
      </if>
      <if test="budgeId != null" >
        budge_id,
      </if>
      <if test="accountName != null" >
        account_name,
      </if>
      <if test="accountLever != null" >
        account_lever,
      </if>
      <if test="accountCode != null" >
        account_code,
      </if>
      <if test="accountAmount != null" >
        account_amount,
      </if>
      <if test="applierId != null" >
        applier_id,
      </if>
      <if test="accountId != null" >
        account_id,
      </if>
      <if test="remainAccountId != null" >
        remain_account_id,
      </if>
      <if test="canIn != null" >
        can_in,
      </if>
      <if test="canOut != null" >
        can_out,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="isDisable != null" >
        #{isDisable,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="comId != null" >
        #{comId,jdbcType=VARCHAR},
      </if>
      <if test="deptId != null" >
        #{deptId,jdbcType=VARCHAR},
      </if>
      <if test="empId != null" >
        #{empId,jdbcType=VARCHAR},
      </if>
      <if test="adminId != null" >
        #{adminId,jdbcType=VARCHAR},
      </if>
      <if test="budgeId != null" >
        #{budgeId,jdbcType=VARCHAR},
      </if>
      <if test="accountName != null" >
        #{accountName,jdbcType=VARCHAR},
      </if>
      <if test="accountLever != null" >
        #{accountLever,jdbcType=VARCHAR},
      </if>
      <if test="accountCode != null" >
        #{accountCode,jdbcType=VARCHAR},
      </if>
      <if test="accountAmount != null" >
        #{accountAmount,jdbcType=VARCHAR},
      </if>
      <if test="applierId != null" >
        #{applierId,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null" >
        #{accountId,jdbcType=VARCHAR},
      </if>
      <if test="remainAccountId != null" >
        #{remainAccountId,jdbcType=VARCHAR},
      </if>
      <if test="canIn != null" >
        #{canIn,jdbcType=VARCHAR},
      </if>
      <if test="canOut != null" >
        #{canOut,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.kakasys.entity.coin.AccountCompanyExample" resultType="java.lang.Integer" >
    select count(*) from account_company
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update account_company
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.isDisable != null" >
        is_disable = #{record.isDisable,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=VARCHAR},
      </if>
      <if test="record.comId != null" >
        com_id = #{record.comId,jdbcType=VARCHAR},
      </if>
      <if test="record.deptId != null" >
        dept_id = #{record.deptId,jdbcType=VARCHAR},
      </if>
      <if test="record.empId != null" >
        emp_id = #{record.empId,jdbcType=VARCHAR},
      </if>
      <if test="record.adminId != null" >
        admin_id = #{record.adminId,jdbcType=VARCHAR},
      </if>
      <if test="record.budgeId != null" >
        budge_id = #{record.budgeId,jdbcType=VARCHAR},
      </if>
      <if test="record.accountName != null" >
        account_name = #{record.accountName,jdbcType=VARCHAR},
      </if>
      <if test="record.accountLever != null" >
        account_lever = #{record.accountLever,jdbcType=VARCHAR},
      </if>
      <if test="record.accountCode != null" >
        account_code = #{record.accountCode,jdbcType=VARCHAR},
      </if>
      <if test="record.accountAmount != null" >
        account_amount = #{record.accountAmount,jdbcType=VARCHAR},
      </if>
      <if test="record.applierId != null" >
        applier_id = #{record.applierId,jdbcType=VARCHAR},
      </if>
      <if test="record.accountId != null" >
        account_id = #{record.accountId,jdbcType=VARCHAR},
      </if>
      <if test="record.remainAccountId != null" >
        remain_account_id = #{record.remainAccountId,jdbcType=VARCHAR},
      </if>
      <if test="record.canIn != null" >
        can_in = #{record.canIn,jdbcType=VARCHAR},
      </if>
      <if test="record.canOut != null" >
        can_out = #{record.canOut,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update account_company
    set id = #{record.id,jdbcType=VARCHAR},
      is_disable = #{record.isDisable,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=VARCHAR},
      com_id = #{record.comId,jdbcType=VARCHAR},
      dept_id = #{record.deptId,jdbcType=VARCHAR},
      emp_id = #{record.empId,jdbcType=VARCHAR},
      admin_id = #{record.adminId,jdbcType=VARCHAR},
      budge_id = #{record.budgeId,jdbcType=VARCHAR},
      account_name = #{record.accountName,jdbcType=VARCHAR},
      account_lever = #{record.accountLever,jdbcType=VARCHAR},
      account_code = #{record.accountCode,jdbcType=VARCHAR},
      account_amount = #{record.accountAmount,jdbcType=VARCHAR},
      applier_id = #{record.applierId,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=VARCHAR},
      remain_account_id = #{record.remainAccountId,jdbcType=VARCHAR},
      can_in = #{record.canIn,jdbcType=VARCHAR},
      can_out = #{record.canOut,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.kakasys.entity.coin.AccountCompany" >
    update account_company
    <set >
      <if test="isDisable != null" >
        is_disable = #{isDisable,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="comId != null" >
        com_id = #{comId,jdbcType=VARCHAR},
      </if>
      <if test="deptId != null" >
        dept_id = #{deptId,jdbcType=VARCHAR},
      </if>
      <if test="empId != null" >
        emp_id = #{empId,jdbcType=VARCHAR},
      </if>
      <if test="adminId != null" >
        admin_id = #{adminId,jdbcType=VARCHAR},
      </if>
      <if test="budgeId != null" >
        budge_id = #{budgeId,jdbcType=VARCHAR},
      </if>
      <if test="accountName != null" >
        account_name = #{accountName,jdbcType=VARCHAR},
      </if>
      <if test="accountLever != null" >
        account_lever = #{accountLever,jdbcType=VARCHAR},
      </if>
      <if test="accountCode != null" >
        account_code = #{accountCode,jdbcType=VARCHAR},
      </if>
      <if test="accountAmount != null" >
        account_amount = #{accountAmount,jdbcType=VARCHAR},
      </if>
      <if test="applierId != null" >
        applier_id = #{applierId,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null" >
        account_id = #{accountId,jdbcType=VARCHAR},
      </if>
      <if test="remainAccountId != null" >
        remain_account_id = #{remainAccountId,jdbcType=VARCHAR},
      </if>
      <if test="canIn != null" >
        can_in = #{canIn,jdbcType=VARCHAR},
      </if>
      <if test="canOut != null" >
        can_out = #{canOut,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.kakasys.entity.coin.AccountCompany" >
    update account_company
    set is_disable = #{isDisable,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=VARCHAR},
      com_id = #{comId,jdbcType=VARCHAR},
      dept_id = #{deptId,jdbcType=VARCHAR},
      emp_id = #{empId,jdbcType=VARCHAR},
      admin_id = #{adminId,jdbcType=VARCHAR},
      budge_id = #{budgeId,jdbcType=VARCHAR},
      account_name = #{accountName,jdbcType=VARCHAR},
      account_lever = #{accountLever,jdbcType=VARCHAR},
      account_code = #{accountCode,jdbcType=VARCHAR},
      account_amount = #{accountAmount,jdbcType=VARCHAR},
      applier_id = #{applierId,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=VARCHAR},
      remain_account_id = #{remainAccountId,jdbcType=VARCHAR},
      can_in = #{canIn,jdbcType=VARCHAR},
      can_out = #{canOut,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>