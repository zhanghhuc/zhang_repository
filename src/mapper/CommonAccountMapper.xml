<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ocf.data.dao.CommonAccountMapper">
  <resultMap id="BaseResultMap" type="ocf.data.entity.CommonAccount">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="is_disable" jdbcType="VARCHAR" property="isDisable" />
    <result column="create_time" jdbcType="BIGINT" property="createTime" />
    <result column="owner_id" jdbcType="VARCHAR" property="ownerId" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="account_name" jdbcType="VARCHAR" property="accountName" />
    <result column="owner_type" jdbcType="VARCHAR" property="ownerType" />
    <result column="balance" jdbcType="INTEGER" property="balance" />
    <result column="tolerance" jdbcType="INTEGER" property="tolerance" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, is_disable, create_time, owner_id, type, account_name, owner_type, balance, tolerance
  </sql>
  <select id="selectByExample" parameterType="ocf.data.entity.CommonAccountExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from common_account
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from common_account
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from common_account
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="ocf.data.entity.CommonAccountExample">
    delete from common_account
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="ocf.data.entity.CommonAccount">
    insert into common_account (id, is_disable, create_time, 
      owner_id, type, account_name, 
      owner_type, balance, tolerance
      )
    values (#{id,jdbcType=VARCHAR}, #{isDisable,jdbcType=VARCHAR}, #{createTime,jdbcType=BIGINT}, 
      #{ownerId,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, #{accountName,jdbcType=VARCHAR}, 
      #{ownerType,jdbcType=VARCHAR}, #{balance,jdbcType=INTEGER}, #{tolerance,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="ocf.data.entity.CommonAccount">
    insert into common_account
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="isDisable != null">
        is_disable,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="ownerId != null">
        owner_id,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="accountName != null">
        account_name,
      </if>
      <if test="ownerType != null">
        owner_type,
      </if>
      <if test="balance != null">
        balance,
      </if>
      <if test="tolerance != null">
        tolerance,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="isDisable != null">
        #{isDisable,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=BIGINT},
      </if>
      <if test="ownerId != null">
        #{ownerId,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="accountName != null">
        #{accountName,jdbcType=VARCHAR},
      </if>
      <if test="ownerType != null">
        #{ownerType,jdbcType=VARCHAR},
      </if>
      <if test="balance != null">
        #{balance,jdbcType=INTEGER},
      </if>
      <if test="tolerance != null">
        #{tolerance,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="ocf.data.entity.CommonAccountExample" resultType="java.lang.Integer">
    select count(*) from common_account
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update common_account
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.isDisable != null">
        is_disable = #{record.isDisable,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=BIGINT},
      </if>
      <if test="record.ownerId != null">
        owner_id = #{record.ownerId,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.accountName != null">
        account_name = #{record.accountName,jdbcType=VARCHAR},
      </if>
      <if test="record.ownerType != null">
        owner_type = #{record.ownerType,jdbcType=VARCHAR},
      </if>
      <if test="record.balance != null">
        balance = #{record.balance,jdbcType=INTEGER},
      </if>
      <if test="record.tolerance != null">
        tolerance = #{record.tolerance,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update common_account
    set id = #{record.id,jdbcType=VARCHAR},
      is_disable = #{record.isDisable,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=BIGINT},
      owner_id = #{record.ownerId,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=VARCHAR},
      account_name = #{record.accountName,jdbcType=VARCHAR},
      owner_type = #{record.ownerType,jdbcType=VARCHAR},
      balance = #{record.balance,jdbcType=INTEGER},
      tolerance = #{record.tolerance,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="ocf.data.entity.CommonAccount">
    update common_account
    <set>
      <if test="isDisable != null">
        is_disable = #{isDisable,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
      <if test="ownerId != null">
        owner_id = #{ownerId,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="accountName != null">
        account_name = #{accountName,jdbcType=VARCHAR},
      </if>
      <if test="ownerType != null">
        owner_type = #{ownerType,jdbcType=VARCHAR},
      </if>
      <if test="balance != null">
        balance = #{balance,jdbcType=INTEGER},
      </if>
      <if test="tolerance != null">
        tolerance = #{tolerance,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="ocf.data.entity.CommonAccount">
    update common_account
    set is_disable = #{isDisable,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=BIGINT},
      owner_id = #{ownerId,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      account_name = #{accountName,jdbcType=VARCHAR},
      owner_type = #{ownerType,jdbcType=VARCHAR},
      balance = #{balance,jdbcType=INTEGER},
      tolerance = #{tolerance,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <resultMap id="BaseResultMap" type="ocf.data.entity.CommonAccount">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="is_disable" jdbcType="VARCHAR" property="isDisable" />
    <result column="create_time" jdbcType="BIGINT" property="createTime" />
    <result column="owner_id" jdbcType="VARCHAR" property="ownerId" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="account_name" jdbcType="VARCHAR" property="accountName" />
    <result column="owner_type" jdbcType="VARCHAR" property="ownerType" />
    <result column="balance" jdbcType="INTEGER" property="balance" />
    <result column="tolerance" jdbcType="INTEGER" property="tolerance" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, is_disable, create_time, owner_id, type, account_name, owner_type, balance, tolerance
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from common_account
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from common_account
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="ocf.data.entity.CommonAccount">
    insert into common_account (id, is_disable, create_time, 
      owner_id, type, account_name, 
      owner_type, balance, tolerance
      )
    values (#{id,jdbcType=VARCHAR}, #{isDisable,jdbcType=VARCHAR}, #{createTime,jdbcType=BIGINT}, 
      #{ownerId,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, #{accountName,jdbcType=VARCHAR}, 
      #{ownerType,jdbcType=VARCHAR}, #{balance,jdbcType=INTEGER}, #{tolerance,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="ocf.data.entity.CommonAccount">
    insert into common_account
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="isDisable != null">
        is_disable,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="ownerId != null">
        owner_id,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="accountName != null">
        account_name,
      </if>
      <if test="ownerType != null">
        owner_type,
      </if>
      <if test="balance != null">
        balance,
      </if>
      <if test="tolerance != null">
        tolerance,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="isDisable != null">
        #{isDisable,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=BIGINT},
      </if>
      <if test="ownerId != null">
        #{ownerId,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="accountName != null">
        #{accountName,jdbcType=VARCHAR},
      </if>
      <if test="ownerType != null">
        #{ownerType,jdbcType=VARCHAR},
      </if>
      <if test="balance != null">
        #{balance,jdbcType=INTEGER},
      </if>
      <if test="tolerance != null">
        #{tolerance,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="ocf.data.entity.CommonAccountExample" resultType="java.lang.Integer">
    select count(*) from common_account
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="ocf.data.entity.CommonAccount">
    update common_account
    <set>
      <if test="isDisable != null">
        is_disable = #{isDisable,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
      <if test="ownerId != null">
        owner_id = #{ownerId,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="accountName != null">
        account_name = #{accountName,jdbcType=VARCHAR},
      </if>
      <if test="ownerType != null">
        owner_type = #{ownerType,jdbcType=VARCHAR},
      </if>
      <if test="balance != null">
        balance = #{balance,jdbcType=INTEGER},
      </if>
      <if test="tolerance != null">
        tolerance = #{tolerance,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="ocf.data.entity.CommonAccount">
    update common_account
    set is_disable = #{isDisable,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=BIGINT},
      owner_id = #{ownerId,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      account_name = #{accountName,jdbcType=VARCHAR},
      owner_type = #{ownerType,jdbcType=VARCHAR},
      balance = #{balance,jdbcType=INTEGER},
      tolerance = #{tolerance,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>